<Activity mc:Ignorable="sap sap2010" x:Class="CompareEmailIdInTransactItemAndPDF" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="Out_Status" Type="OutArgument(x:String)" />
    <x:Property Name="inout_blnErrorFlag" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="In_config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>824,3760.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CompareEmailIdInTransactItemAndPDF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="49">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>Microsoft.Rest</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="43">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.Orchestrator</AssemblyReference>
      <AssemblyReference>Microsoft.Rest.ClientRuntime</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Compare the EmailID in excel and Resume using Document understanding concept and match found/not found status.&#xA;" DisplayName="CompareEmailIdInTransactItemAndPDF" sap:VirtualizedContainerService.HintSize="716,3696" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="EmailId" />
      <Variable x:TypeArguments="s:String[]" Name="path" />
      <Variable x:TypeArguments="x:String" Name="docName" />
      <Variable x:TypeArguments="p7:DocumentTaxonomy" Name="taxonomy" />
      <Variable x:TypeArguments="x:String" Name="text" />
      <Variable x:TypeArguments="p3:Document" Name="dom" />
      <Variable x:TypeArguments="sd1:DataSet" Name="dataSetOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="674.4,3559.2" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Comapre Email ID In TransactionItem and Resume PDF" sap:VirtualizedContainerService.HintSize="637.6,3328" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="folderName" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="596,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[EmailID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_TransactionItem.SpecificContent("Email").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="596,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_config("TempFolder")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="596,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[path]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(folderName)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[path.Length&gt;0]" sap:VirtualizedContainerService.HintSize="596,2935.2" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="560.8,2746.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="DOC understanding Seq" sap:VirtualizedContainerService.HintSize="519.2,2544.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="p5:ClassificationResult[]" Name="clssifyResult" />
                    <Variable x:TypeArguments="p5:ExtractionResult" Name="extractionResults" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="477.6,105.6" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
                  <Assign sap:VirtualizedContainerService.HintSize="477.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[docName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.IO.Path.GetFileNameWithoutExtension(path(0))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="477.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start processing document &lt;&quot; + docName + &quot;&gt;&quot;]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="477.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Digitizing document &lt;&quot; + docName + &quot;&gt;&quot;]" />
                  <p:DigitizeDocument DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[dom]" DocumentPath="[path(0)]" DocumentText="[text]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="477.6,297.6" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                    <p:DigitizeDocument.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22.4" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" />
                      </ActivityFunc>
                    </p:DigitizeDocument.OCREngine>
                  </p:DigitizeDocument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="477.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Classifying document &lt;&quot; + docName + &quot;&gt;&quot;]" />
                  <p1:ClassifyDocumentScope ClassificationResults="[clssifyResult]" DisplayName="Classify Document Scope" DocumentObjectModel="[dom]" DocumentPath="[path(0)]" DocumentText="[text]" sap:VirtualizedContainerService.HintSize="477.6,441.6" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIb777fa8ed7e742728175af422aae7426&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;HR.Resume.Resume&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;HR.Resume.Resume&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIb777fa8ed7e742728175af422aae7426&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UIb777fa8ed7e742728175af422aae7426&quot;:[]}}">
                    <p1:ClassifyDocumentScope.Classifiers>
                      <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="233.6,115.2" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\classifier.json" PersistenceId="UIb777fa8ed7e742728175af422aae7426">
                        <p1:KeywordBasedClassifier.ClassifierResult>
                          <OutArgument x:TypeArguments="p2:ClassifierResult">
                            <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                              <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p1:KeywordBasedClassifier.ClassifierResult>
                        <p1:KeywordBasedClassifier.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentObjectModel>
                        <p1:KeywordBasedClassifier.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentPath>
                        <p1:KeywordBasedClassifier.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentText>
                        <p1:KeywordBasedClassifier.DocumentTypes>
                          <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                            <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                              <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentTypes>
                      </p1:KeywordBasedClassifier>
                    </p1:ClassifyDocumentScope.Classifiers>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p1:ClassifyDocumentScope>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="477.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[clssifyResult(0).DocumentTypeId]" />
                  <ui:CommentOut Body="{x:Null}" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="477.6,94.4" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="477.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Extraction document &lt;&quot; + docName + &quot;&gt;&quot;]" />
                  <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[clssifyResult(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[dom]" DocumentPath="[path(0)]" DocumentText="[text]" ExtractionResult="[extractionResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="477.6,402.4" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI8f74867a819342559a34815d25f04422&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;HR.Resume.Resume&quot;:{&quot;FieldMappings&quot;:{&quot;HR.Resume.Resume.email&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;HR.Resume.Resume.email&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI8f74867a819342559a34815d25f04422&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI8f74867a819342559a34815d25f04422&quot;:[]}}">
                    <p4:DataExtractionScope.Extractors>
                      <p4:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;HR.Resume.Resume&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;HR.Resume.Resume.email&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\/=?^_`{|}~]+\\x20*|\&quot;&quot;((?=[\\x01-\\x7f])[^\&quot;&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\/=?^_`{|}~]+)+|\&quot;&quot;((?=[\\x01-\\x7f])[^\&quot;&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;{\&quot;&quot;Parts\&quot;&quot;:[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;EMAIL\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Email\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;((?&gt;[a-zA-Z\\\\d!#$%&amp;'*+\\\\-\\\\\\/=?^_`{|}~]+\\\\x20*|\\\&quot;&quot;((?=[\\\\x01-\\\\x7f])[^\\\&quot;&quot;\\\\\\\\]|\\\\\\\\[\\\\x01-\\\\x7f])*\\\&quot;&quot;\\\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\\\.)(?&gt;\\\\.?[a-zA-Z\\\\d!#$%&amp;'*+\\\\-\\\\\\/=?^_`{|}~]+)+|\\\&quot;&quot;((?=[\\\\x01-\\\\x7f])[^\\\&quot;&quot;\\\\\\\\]|\\\\\\\\[\\\\x01-\\\\x7f])*\\\&quot;&quot;)@(((?!-)[a-zA-Z\\\\d\\\\-]+(?&lt;!-)\\\\.)+[a-zA-Z]{2,}|\\\\[(((?(?&lt;!\\\\[)\\\\.)(25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)){4}|[a-zA-Z\\\\d\\\\-]*[a-zA-Z\\\\d]:((?=[\\\\x01-\\\\x7f])[^\\\\\\\\\\\\[\\\\]]|\\\\\\\\[\\\\x01-\\\\x7f])+)\\\\])(?(angle)&gt;)\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}],\&quot;&quot;Version\&quot;&quot;:2}&quot;&quot;}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="233.6,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_1" PersistenceId="UI8f74867a819342559a34815d25f04422" Timeout="2000" UseVisualAlignment="False">
                        <p4:RegexBasedExtractor.DocumentBounds>
                          <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
                            <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                              <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:RegexBasedExtractor.DocumentBounds>
                        <p4:RegexBasedExtractor.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:RegexBasedExtractor.DocumentObjectModel>
                        <p4:RegexBasedExtractor.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:RegexBasedExtractor.DocumentPath>
                        <p4:RegexBasedExtractor.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:RegexBasedExtractor.DocumentText>
                        <p4:RegexBasedExtractor.ExtractorDocumentType>
                          <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                            <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                              <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:RegexBasedExtractor.ExtractorDocumentType>
                        <p4:RegexBasedExtractor.ExtractorResult>
                          <OutArgument x:TypeArguments="p6:ExtractorResult">
                            <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                              <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p4:RegexBasedExtractor.ExtractorResult>
                      </p4:RegexBasedExtractor>
                    </p4:DataExtractionScope.Extractors>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p4:DataExtractionScope>
                  <p4:ExportExtractionResults DataSet="[dataSetOutput]" DisplayName="Export Extraction Results" ExtractionResult="[extractionResults]" sap:VirtualizedContainerService.HintSize="477.6,176.8" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p4:ExportExtractionResults>
                </Sequence>
                <Sequence DisplayName="Checking match or match not found" sap:VirtualizedContainerService.HintSize="519.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dataSetOutput.Tables(0)]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="358.4,599.2" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd1:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRowDS" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,478.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="outputText" />
                            <Variable x:TypeArguments="x:Boolean" Name="blnMatch" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:OutputDataTable DataTable="[dataSetOutput.Tables(0)]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[outputText]" />
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="283.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[CurrentRowDS(0).ToString]" />
                          <Assign sap:VirtualizedContainerService.HintSize="283.2,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Out_Status]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[if(CurrentRowDS(0).ToString.ToLower.Trim()=EmailId.ToString.ToLower.Trim(),"Match found","Match not found")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="283.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[Out_Status.ToString]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="640.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="304,253.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[inout_blnErrorFlag]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Error occurred in CompareEmail id in resume and transaction item sequence. &quot;+exception.Message]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>